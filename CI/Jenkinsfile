pipeline {
    agent any

    environment {
        DOCKERHUB_CREDS=credentials('sikasi')
        LC_ALL = "en_US.UTF-8"
        LANG    = "en_US.UTF-8"
        LANGUAGE = "en_US.UTF-8"
        SLEEP_TIME_IN_SECONDS1 = 420
        SLEEP_TIME_IN_SECONDS2 = 60
    }

    options {
            timestamps()
            skipDefaultCheckout(true)
        }

    stages {

        stage('Clone github repository') {
            steps {
                cleanWs()
                sh 'git clone -b main https://github.com/stpic270/Big_data_fourth_lab.git'
				}
			}

        stage('cd to repo') {
            steps {
                sh 'cd Big_data_fourth_lab && dir'
				}
			}

        stage('Login'){
            steps{
                //withCredentials([usernamePassword(credentialsId: 'sikasi', passwordVariable: 'DOCKER_REGISTRY_PWD', usernameVariable: 'DOCKER_REGISTRY_USER')]){
                //sh 'echo %DOCKER_REGISTRY_PWD% | docker login -u %DOCKER_REGISTRY_USER% --password-stdin'}
                // echo '%DOCKERHUB_CREDS_USR%'
                sh 'echo $DOCKERHUB_CREDS_PSW | docker login -u $DOCKERHUB_CREDS_USR --password-stdin'
                // sh 'docker login -u %DOCKERHUB_CREDS_USR% -p %DOCKERHUB_CREDS_PSW%'
                }
            }
        
        stage('Run docker compose') {
            steps {
                sh  '''
                cd Big_data_fourth_lab && docker compose build
                docker compose up -d --no-start
                    '''
                }
            }
            
        stage('Start containers'){
            steps{

                sh 'docker start big_data_fourth_lab-model-1'
                
                echo "Waiting 30 seconds for entrypoint script"
                sleep 30
                
                sh  '''
                    docker start big_data_fourth_lab-cassandra-1
                    docker exec -t big_data_fourth_lab-cassandra-1 bash -c "echo '\n' >> config/cassandra_ip.txt && ip -4 -o address >> config/cassandra_ip.txt"
                    docker start big_data_fourth_lab-zookeeper-1
                    docker start big_data_fourth_lab-kafka-1 && docker exec -t -d big_data_fourth_lab-kafka-1 bash -c "/bin/kafka-topics --create --topic cassandra-topic --bootstrap-server kafka:9092"
                    docker exec -t big_data_fourth_lab-model-1 bash -c "scripts/cassandra.sh"
                    docker exec -t big_data_fourth_lab-kafka-1 bash -c "/bin/kafka-console-consumer --topic cassandra-topic --max-messages 12 --from-beginning --bootstrap-server kafka:9092"
                    '''
                }
            }
            
        stage('Checkout container logs') {
            steps {
                sh  '''
                    containerId=$(docker ps -a -q -f "name=^big_data_fourth_lab-model-1$")
                    echo "$containerId"
                    if ["$containerId" -eq ""]
                    then
                        echo "No container"
                    else
                        echo "There is a container"
                        docker logs --tail 20 -f $containerId
                    fi
                    '''
            }
        }
        stage('Checkout coverage report'){
            steps{
                dir("Big_data_fourth_lab"){
                    sh '''
                    docker compose logs -t --tail 20
                    '''
                }
            }
        }

        stage('Push'){
            steps{
                sh 'docker push stpic270/bd-thl-d:latest'
                sh 'docker push stpic270/bd-secl-cassandra:latest'
                sh 'docker stop $(docker ps -a -q)'
            }
        }
        
        stage('Post always'){
            steps{
                 sh 'docker logout'
            }
        }
    }
}