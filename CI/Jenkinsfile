
pipeline {
    agent any

    environment {
        DOCKERHUB_CREDS=credentials('sikasi')
        LC_ALL = "en_US.UTF-8"
        LANG    = "en_US.UTF-8"
        LANGUAGE = "en_US.UTF-8"
    }

    options {
            timestamps()
            skipDefaultCheckout(true)
        }
    stages {


        stage('Clone github repository') {
            steps {
                cleanWs()
                sh 'git clone -b main https://github.com/stpic270/Big_data_first_lab.git'
				}
			}

        stage('Checkout repo dir') {
            steps {
                sh 'cd Big_data_first_lab && dir'
				}
			}

        stage('Login'){
            steps{
                //withCredentials([usernamePassword(credentialsId: 'sikasi', passwordVariable: 'DOCKER_REGISTRY_PWD', usernameVariable: 'DOCKER_REGISTRY_USER')]){
                //sh 'echo %DOCKER_REGISTRY_PWD% | docker login -u %DOCKER_REGISTRY_USER% --password-stdin'}
                // echo '%DOCKERHUB_CREDS_USR%'
                sh 'echo $DOCKERHUB_CREDS_PSW | docker login -u $DOCKERHUB_CREDS_USR --password-stdin'
                // sh 'docker login -u %DOCKERHUB_CREDS_USR% -p %DOCKERHUB_CREDS_PSW%'
                }
            }
		stage('Create and run docker container') {
            steps {
                script {
                    try {
                        sh 'cd Big_data_first_lab && docker compose build'
                        }

                    finally {
                    sh '''
                        cd Big_data_first_lab
                        docker compose up -d
                        '''
                        }
				    }
                }
            }

        // use for multi containers:
        //docker exec %containerId% cd app && coverage run src/unit_tests/test_preprocess.py && coverage run -a src/unit_tests/test_training.py && coverage report -m
        //use for single container (with auth):
        //docker run --name mle-template_web_1 cd app && coverage run src/unit_tests/test_preprocess.py && coverage run -a src/unit_tests/test_training.py && coverage report -m

        stage('Checkout container logs') {
            steps {
                dir("Big_data_first_lab") {
                        sh '''
                            docker compose up -d
                            containerId=$(docker ps -a -q -f "name=^big_data_first_lab-web-1$")
                            echo "$containerId"
                            if ["$containerId" -eq ""]
                            then
                                echo "No container"
                            else
                                echo "There is a container"
                                docker logs --tail 20 -f $containerId
                            fi
                        '''
                    }
            }
        }

        stage('Checkout coverage report'){
            steps{
                dir("Big_data_first_lab"){
                    sh '''
                    docker compose logs -t --tail 20
                    '''
                }
            }
        }

        stage('Push'){
            steps{
                sh 'docker push stpic270/bd-fl-d:latest'
            }
        }
        stage('Post always'){
            steps{
                 sh 'docker logout'
            }
        }
	}
}